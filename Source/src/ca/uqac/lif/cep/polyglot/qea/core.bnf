# ------------------------------------------------------------------
# A grammar for Quantified Event Automata
# (C) 2018 Sylvain Hall√©
# ------------------------------------------------------------------

<S>         := <quantifier> | <trans> | <initial-asg> | <symbol> | <auto> ;
<trans>     := <state-num> -\u003e <state-num> <guard>;
<guard>     := [ <fct> / <asg> ] | [ <fct> ] ; 
<symbol>    := <state-num> [ <rvalue> ];
<state-num> := ^\d+;
<auto>      := qea { | } ;

# Quantifiers

<quantifier>   := <forall> | <exists> | <sum> | <avg> ;
<forall>       := forall <var> in <dom-fct> ;
<exists>       := exists <var> in <dom-fct> ;
<sum>          := sum <var> in <dom-fct> ;
<avg>          := avg <var> in <dom-fct> ;

# Functions that can appear in guards
 
<fct>         := <and> | <or> | <otherwise> ;
<and>         := ( <fct> ) & ( <fct> );
<or>          := ( <fct> ) \u007c ( <fct> );
<otherwise>   := * ;

# Assignments to state variables

<initial-asg> := <var> \u003a\u003d <const> ;
<asg>         := <var> \u003a\u003d <rvalue> ;
<rvalue>      := <plus> | <var> | <const> ;
<plus>        := ( <rvalue> ) + ( <rvalue> ) ;
<const>       := ^[\w\d]+;
<var>         := ^\$[\w\d]+;